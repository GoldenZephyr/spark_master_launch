<launch>

  <arg name="robot_name"/>
  <arg name="node_name"/>
  <arg name="required"/>
  <arg name="configuration_name"/>
  <arg name="output"/>
  <arg name="verbosity" default="0"/>

  <node name="kimera_vio_ros_node" pkg="kimera_vio_ros" type="kimera_vio_ros_node"
        output="$(arg output)" 
        required="$(arg required)"
        args="--vocabulary_path=$(find kimera_multi_lcd)/vocab/mit_voc.yml
              --output_path=$(find spark_master_launch)/output/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)
              --flagfile=$(find spark_master_launch)/config/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)/Pipeline.flags
              --flagfile=$(find spark_master_launch)/config/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)/Mesher.flags
              --flagfile=$(find spark_master_launch)/config/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)/VioBackend.flags
              --flagfile=$(find spark_master_launch)/config/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)/RegularVioBackend.flags
              --flagfile=$(find spark_master_launch)/config/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)/Visualizer3D.flags
              --flagfile=$(find spark_master_launch)/config/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)/Extra.flags
              --v=$(arg verbosity)">

        <rosparam file="$(find spark_master_launch)/config/$(arg configuration_name)/$(arg node_name)/$(arg robot_name)/kimera_vio_ros_node.yaml" subst_value="true"/>
    </node>
</launch>
